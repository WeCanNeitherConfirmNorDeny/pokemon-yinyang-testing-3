MAX_LEVEL			EQU 100
STARTER_LEVEL			EQU 5

START_MONEY			EQU $3000
DAYCARE_EXP_CEILING		EQU $50

_intro_mon: MACRO
DEF INTRO_MON			EQU PONYTA
DEF PAL_INTRO_MON		EQU PAL_PONYTA
IF DEF(_HARD)
	REDEF INTRO_MON		EQU ARTICUNO
	REDEF PAL_INTRO_MON	EQU PAL_ARTICUNO
ENDC
ENDM

;;;;;;;;;;;;;;;
DEF NUM_TMS	EQU 50
DEF NUM_HMS	EQU 5
DEF NUM_TYPES			EQU 2
DEF NUM_MOVES			EQU 4
DEF NUM_STATS			EQU 5
DEF NUM_DVS			EQU 2
DEF DEFAULT_NUM_STAT_MODS	EQU 7
DEF NUM_STAT_MODS		EQU 8 *4
IF DEF(_HARD)
	REDEF NUM_STAT_MODS	EQU (8 *8)
ENDC

NAME_LENGTH			EQU 11
ENEMY_NAME_LENGTH		EQU 13
MON_NICK_LENGTH			EQU 10
MON_OT_LENGTH			EQU NAME_LENGTH
ITEM_NAME_LENGTH		EQU 13

; sizeof party & battle struct elements
DEF SIZE_SPECIES		EQU 1
DEF SIZE_HP			EQU 1
DEF SIZE_BOXLEVEL		EQU 1
DEF SIZE_PARTYPOS		EQU SIZE_BOXLEVEL
DEF SIZE_STATUS			EQU 1
DEF SIZE_TYPES			EQU 1*NUM_TYPES
DEF SIZE_TYPE1			EQU 1
DEF SIZE_TYPE2			EQU 1
DEF SIZE_CATCHRATE		EQU 1
DEF SIZE_CATCHRATE_NOTREFERENCED	EQU SIZE_CATCHRATE
DEF SIZE_MOVES			EQU 1*NUM_MOVES
DEF SIZE_OTID			EQU 2
DEF SIZE_EXP			EQU 3
DEF SIZE_STATEXP		EQU 2*NUM_STATS
DEF SIZE_EVS			EQU SIZE_STATEXP
	DEF SIZE_HPEXP		EQU 2
	DEF SIZE_ATTACKEXP	EQU 2
	DEF SIZE_DEFENSEEXP	EQU 2
	DEF SIZE_SPEEDEXP	EQU 2
	DEF SIZE_SPECIALEXP	EQU 2
	DEF SIZE_ATKEXP	EQU SIZE_ATTACKEXP ; aliases
	DEF SIZE_DEFEXP	EQU SIZE_DEFENSEEXP
	DEF SIZE_SPDEXP	EQU SIZE_SPEEDEXP
	DEF SIZE_SPCEXP	EQU SIZE_SPECIALEXP
DEF SIZE_LEVEL			EQU 1
DEF SIZE_STATS			EQU 2*NUM_STATS
	DEF SIZE_MAXHP		EQU 2
	DEF SIZE_ATTACK		EQU 2
	DEF SIZE_DEFENSE	EQU 2
	DEF SIZE_SPEED		EQU 2
	DEF SIZE_SPECIAL	EQU 2
	DEF SIZE_ATK	EQU SIZE_ATTACK ; aliases
	DEF SIZE_DEF	EQU SIZE_DEFENSE
	DEF SIZE_SPD	EQU SIZE_SPEED
	DEF SIZE_SPC	EQU SIZE_SPECIAL
DEF SIZE_DVS			EQU 1*NUM_DVS
DEF SIZE_IVS			EQU SIZE_DVS
	DEF SIZE_ATKDEFDV	EQU 1
	DEF SIZE_SPDSPCDV	EQU 1
DEF SIZE_PP			EQU 1*NUM_MOVES
DEF SIZE_GENDER			EQU 1
DEF SIZE_MON_OT			EQU MON_OT_LENGTH ; trainer name
DEF SIZE_MON_NICK		EQU MON_NICK_LENGTH ; mon nick name

box_struct_length EQU (\
	SIZE_SPECIES \
+	SIZE_HP \
+	SIZE_BOXLEVEL \
+	SIZE_STATUS \
+	SIZE_TYPES \
+	SIZE_CATCHRATE \
+	SIZE_MOVES \
+	SIZE_OTID \
+	SIZE_EXP \
+	SIZE_STATEXP \
+	SIZE_DVS \
+	SIZE_PP \
+	SIZE_GENDER \
)
party_struct_length EQU (\
	box_struct_length \
+	SIZE_LEVEL \
+	SIZE_STATS \
)
battle_struct_length EQU (\
	box_struct_length \
+	SIZE_LEVEL \
+	SIZE_STATS \
)

; sizeof base stats & header struct
DEF SIZE_HEADER_INDEX		EQU 1
DEF SIZE_BASE_STATS		EQU (1 * NUM_STATS)
DEF SIZE_BASE_HP		EQU 1
DEF SIZE_BASE_ATTACK		EQU 1
DEF SIZE_BASE_DEFENSE		EQU 1
DEF SIZE_BASE_SPEED		EQU 1
DEF SIZE_BASE_SPECIAL		EQU 1
DEF SIZE_GENDER_RATIO		EQU 1
DEF SIZE_HEADER_TYPES		EQU NUM_TYPES
DEF SIZE_HEADER_TYPE_1		EQU 1
DEF SIZE_HEADER_TYPE_2		EQU 1
DEF SIZE_HEADER_CATCHRATE	EQU 1
DEF SIZE_BASE_EXP		EQU 1
DEF SIZE_HEADER_SPRITE_DIM	EQU 1
DEF SIZE_HEADER_FRONT_SPRITE	EQU 2
DEF SIZE_HEADER_BACK_SPRITE	EQU 2
DEF SIZE_HEADER_MOVES		EQU NUM_MOVES
DEF SIZE_HEADER_GROWTHRATE	EQU 1
DEF SIZE_HEADER_LEARNSET	EQU (NUM_TMS + NUM_HMS) ; flag_array
DEF SIZE_HEADER_PICBANK		EQU 1

PARTY_LENGTH			EQU 6

MONS_PER_BOX			EQU 20
;NUM_BOXES			EQU 12
NUM_BOXES			EQU 3

BAG_ITEM_CAPACITY		EQU 100
PC_ITEM_CAPACITY		EQU 75

SPECIAL_TRAINER			EQU $FE ; custom levels and moves for each
SPECIAL_TRAINER2		EQU $FD ; custom levels, moves, trainer pic, and AI
CUSTOM_PIC			EQU $FC ; custom pic, all Pokemon same level like normal trainer
SPECIAL_LEVELS			EQU $FB ; custom levels only

HOF_MON				EQU $10
HOF_TEAM			EQU PARTY_LENGTH * HOF_MON
HOF_TEAM_CAPACITY		EQU 50

A_BUTTON	EQU %00000001
B_BUTTON	EQU %00000010
SELECT		EQU %00000100
START		EQU %00001000
D_RIGHT		EQU %00010000
D_LEFT		EQU %00100000
D_UP		EQU %01000000
D_DOWN		EQU %10000000

const_value set 0
	const BIT_A_BUTTON
	const BIT_B_BUTTON
	const BIT_SELECT
	const BIT_START
	const BIT_D_RIGHT
	const BIT_D_LEFT
	const BIT_D_UP
	const BIT_D_DOWN

; tile
SCREEN_WIDTH	EQU 20
SCREEN_HEIGHT	EQU 18
; pixel
SCREEN_WIDTH_PIXELS	EQU SCREEN_WIDTH * 8
SCREEN_HEIGHT_PIXELS	EQU SCREEN_HEIGHT * 8

BG_MAP_WIDTH	EQU 32
BG_MAP_HEIGHT	EQU 32

SPRITEBUFFERSIZE	EQU (7*7) * 8 ; 7 * 7 (tiles) * 8 (bytes per tile)

NPC_MOVEMENT_DOWN	EQU $00
NPC_MOVEMENT_UP	EQU $40
NPC_MOVEMENT_LEFT	EQU $80
NPC_MOVEMENT_RIGHT	EQU $C0

; text box IDs
MESSAGE_BOX				EQU $01
FIELD_MOVE_MON_MENU		   	EQU $04
JP_MOCHIMONO_MENU_TEMPLATE		EQU $05
USE_TOSS_MENU_TEMPLATE			EQU $06
JP_SAVE_MESSAGE_MENU_TEMPLATE	 	EQU $08
JP_SPEED_OPTIONS_MENU_TEMPLATE		EQU $09
BATTLE_MENU_TEMPLATE		  	EQU $0b
SWITCH_STATS_CANCEL_MENU_TEMPLATE 	EQU $0c
LIST_MENU_BOX			 	EQU $0d
BUY_SELL_QUIT_MENU_TEMPLATE	   	EQU $0e
MONEY_BOX_TEMPLATE			EQU $0f
MON_SPRITE_POPUP		  	EQU $11
JP_AH_MENU_TEMPLATE		   	EQU $12
MONEY_BOX			 	EQU $13
TWO_OPTION_MENU			   	EQU $14
BUY_SELL_QUIT_MENU			EQU $15
JP_POKEDEX_MENU_TEMPLATE	  	EQU $1a
SAFARI_BATTLE_MENU_TEMPLATE	   	EQU $1b
ID_3_BOX				EQU $3
ID_7_BOX				EQU $7
ID_10_BOX				EQU $10

; start menu constants
START_MENU_ITEMS_ALL		EQU 7
START_MENU_ITEMS_NO_POKEDEX	EQU 6
START_MENU_ITEMS_NO_POKEMON	EQU 5
;	coord hl, 8, 0	; coordinates
;	ld b,$10 	; y length
;	ld c,$0b 	; x length
START_MENU_X		EQU 8
START_MENU_Y 		EQU 0
START_MENU_WIDTH	EQU 11
START_MENU_HEIGHT	EQU 15

; status screen
;	coord hl, 0, 8
;	ld b, 8
;	ld c, 18
STATUS_SCREEN_MOVES_X		EQU 0
STATUS_SCREEN_MOVES_Y 		EQU 8
STATUS_SCREEN_MOVES_WIDTH	EQU SCREEN_WIDTH
STATUS_SCREEN_MOVES_HEIGHT	EQU 19

;NORMAL_TEXT_X		EQU 0
;NORMAL_TEXT_Y		EQU 12
;NORMAL_TEXT_WIDTH	EQU $12
;NORMAL_TEXT_HEIGHT	EQU 4
NORMAL_TEXT_X		EQU 0
NORMAL_TEXT_Y		EQU 13
NORMAL_TEXT_WIDTH	EQU $13
NORMAL_TEXT_HEIGHT	EQU 4

; option menu constants - labels
; x
OPTION_MENU_LABEL_X_TEXT_SPEED		EQU 1
OPTION_MENU_LABEL_X_BATTLE_ANIMATION	EQU 1
OPTION_MENU_LABEL_X_BATTLE_STYLE	EQU 1
OPTION_MENU_LABEL_X_POKEMON_OBEY	EQU 1
OPTION_MENU_LABEL_X_CANCELNEXT		EQU 1
; y
OPTION_MENU_LABEL_Y_TEXT_SPEED		EQU 0
OPTION_MENU_LABEL_Y_BATTLE_ANIMATION	EQU 4
OPTION_MENU_LABEL_Y_BATTLE_STYLE	EQU 8
OPTION_MENU_LABEL_Y_POKEMON_OBEY	EQU 12
OPTION_MENU_LABEL_Y_CANCELNEXT		EQU 16

; option menu constants
; x
OPTION_MENU_X_TEXT_SPEED	EQU 1
OPTION_MENU_X_BATTLE_ANIMATION	EQU 1
OPTION_MENU_X_BATTLE_STYLE	EQU 1
OPTION_MENU_X_POKEMON_OBEY	EQU 1
OPTION_MENU_X_CANCELNEXT	EQU 1
; y
OPTION_MENU_Y_TEXT_SPEED 	EQU (OPTION_MENU_LABEL_Y_TEXT_SPEED +2)
OPTION_MENU_Y_BATTLE_ANIMATION 	EQU (OPTION_MENU_LABEL_Y_BATTLE_ANIMATION +2)
OPTION_MENU_Y_BATTLE_STYLE 	EQU (OPTION_MENU_LABEL_Y_BATTLE_STYLE +2)
OPTION_MENU_Y_POKEMON_OBEY 	EQU (OPTION_MENU_LABEL_Y_POKEMON_OBEY +2)
OPTION_MENU_Y_CANCELNEXT 	EQU (OPTION_MENU_LABEL_Y_CANCELNEXT)

; text box coords constants:
; message box coords
MESSAGE_BOX_X		EQU 0
MESSAGE_BOX_Y		EQU 13
MESSAGE_BOX_WIDTH	EQU 20
MESSAGE_BOX_HEIGHT	EQU 18
; id $3 box coords
ID_3_BOX_X		EQU 0
ID_3_BOX_Y		EQU 0
ID_3_BOX_WIDTH		EQU 19
ID_3_BOX_HEIGHT		EQU 14
; id $7 box coords
ID_7_BOX_X		EQU 0
ID_7_BOX_Y		EQU 0
ID_7_BOX_WIDTH		EQU 11
ID_7_BOX_HEIGHT		EQU 6
; id $10 box coords
ID_10_BOX_X		EQU 7
ID_10_BOX_Y		EQU 0
ID_10_BOX_WIDTH	EQU 19
ID_10_BOX_HEIGHT	EQU 17
; list menu coords
LIST_MENU_BOX_X		EQU 0
LIST_MENU_BOX_Y		EQU 3
LIST_MENU_BOX_WIDTH	EQU 19
LIST_MENU_BOX_HEIGHT	EQU 13
; mon sprite popup coords
MON_SPRITE_POPUP_X	EQU 6
MON_SPRITE_POPUP_Y	EQU 4
MON_SPRITE_POPUP_WIDTH	EQU 14
MON_SPRITE_POPUP_HEIGHT	EQU 12

; two option menu constants
YES_NO_MENU	 	EQU 0
BOY_GIRL_MENU		EQU 1
SOUTH_EAST_MENU  	EQU 2
WIDE_YES_NO_MENU 	EQU 3
NORTH_EAST_MENU  	EQU 4
TRADE_CANCEL_MENU	EQU 5
HEAL_CANCEL_MENU 	EQU 6
NO_YES_MENU	  	EQU 7

; menu exit method constants for list menus and the buy/sell/quit menu
CHOSE_MENU_ITEM  	EQU 1 ; pressed A
CANCELLED_MENU		EQU 2 ; pressed B

; menu exit method constants for two-option menus
CHOSE_FIRST_ITEM	EQU 1
CHOSE_SECOND_ITEM	EQU 2

; move mon constants
BOX_TO_PARTY	  	EQU 0
PARTY_TO_BOX	  	EQU 1
DAYCARE_TO_PARTY  	EQU 2
PARTY_TO_DAYCARE  	EQU 3
PARTY_TO_DAYCARE_2	EQU 4
DAYCARE_TO_PARTY_2	EQU 5

; emotion bubbles
EXCLAMATION_BUBBLE	EQU 0
QUESTION_BUBBLE		EQU 1
SMILE_BUBBLE	  	EQU 2

; slot symbols
SLOTS7		EQU $0200
SLOTSBAR	EQU $0604
SLOTSCHERRY	EQU $0A08
SLOTSFISH	EQU $0E0C
SLOTSBIRD	EQU $1210
SLOTSMOUSE	EQU $1614

; party menu types
NORMAL_PARTY_MENU	EQU 0
USE_ITEM_PARTY_MENU	EQU 1
BATTLE_PARTY_MENU	EQU 2
TMHM_PARTY_MENU		EQU 3
SWAP_MONS_PARTY_MENU	EQU 4
EVO_STONE_PARTY_MENU	EQU 5

; party menu message IDs
ANTIDOTE_MSG		EQU $F0
BURN_HEAL_MSG		EQU $F1
ICE_HEAL_MSG		EQU $F2
AWAKENING_MSG		EQU $F3
PARALYZ_HEAL_MSG	EQU $F4
POTION_MSG		EQU $F5
FULL_HEAL_MSG		EQU $F6
REVIVE_MSG		EQU $F7
RARE_CANDY_MSG		EQU $F8

; naming screen types
NAME_PLAYER_SCREEN	EQU 0
NAME_RIVAL_SCREEN	EQU 1
NAME_MON_SCREEN	EQU 2

; mon data locations
; Note that some values are not supported by all functions that use these values.
PLAYER_PARTY_DATA	EQU 0
ENEMY_PARTY_DATA	EQU 1
BOX_DATA		EQU 2
DAYCARE_DATA		EQU 3
BATTLE_MON_DATA		EQU 4

; player direction constants
PLAYER_DIR_BIT_RIGHT	EQU 0
PLAYER_DIR_BIT_LEFT	EQU 1
PLAYER_DIR_BIT_DOWN	EQU 2
PLAYER_DIR_BIT_UP	EQU 3

PLAYER_DIR_RIGHT	EQU (1 << PLAYER_DIR_BIT_RIGHT)
PLAYER_DIR_LEFT		EQU (1 << PLAYER_DIR_BIT_LEFT)
PLAYER_DIR_DOWN		EQU (1 << PLAYER_DIR_BIT_DOWN)
PLAYER_DIR_UP		EQU (1 << PLAYER_DIR_BIT_UP)

; flag operations
FLAG_RESET		EQU 0
FLAG_SET		EQU 1
FLAG_TEST		EQU 2

; HP bar
HP_BAR_GREEN		EQU 0
HP_BAR_YELLOW		EQU 1
HP_BAR_RED		EQU 2

; wExtraFlags
BIT_MONS_OBEY		EQU 2 ; set=Obey, clr=Disobey

; D733 flags
BIT_TEST_BATTLE		EQU 0

; D730 flags
BIT_WD730_LETTER_PRINTING_DELAY	EQU 6 ; set=No delay, clr=Delay active

; battle type constants
BATTLE_TYPE_NORMAL	EQU 0
BATTLE_TYPE_OLD_MAN	EQU 1
BATTLE_TYPE_SAFARI	EQU 2

; serial
ESTABLISH_CONNECTION_WITH_INTERNAL_CLOCK	EQU $01
ESTABLISH_CONNECTION_WITH_EXTERNAL_CLOCK	EQU $02

USING_EXTERNAL_CLOCK		EQU $01
USING_INTERNAL_CLOCK		EQU $02
CONNECTION_NOT_ESTABLISHED	EQU $ff

; signals the start of an array of bytes transferred over the link cable
SERIAL_PREAMBLE_BYTE		EQU $FD

; this byte is used when there is no data to send
SERIAL_NO_DATA_BYTE		EQU $FE

; signals the end of one part of a patch list (there are two parts) for player/enemy party data
SERIAL_PATCH_LIST_PART_TERMINATOR	EQU $FF

LINK_STATE_NONE			EQU $00 ; not using link
LINK_STATE_IN_CABLE_CLUB	EQU $01 ; in a cable club room (Colosseum or Trade Centre)
LINK_STATE_START_TRADE		EQU $02 ; pre-trade selection screen initialisation
LINK_STATE_START_BATTLE		EQU $03 ; pre-battle initialisation
LINK_STATE_BATTLING		EQU $04 ; in a link battle
LINK_STATE_RESET		EQU $05 ; reset game (unused)
LINK_STATE_TRADING		EQU $32 ; in a link trade

LINKBATTLE_RUN			EQU $F
LINKBATTLE_STRUGGLE		EQU $E
LINKBATTLE_NO_ACTION		EQU $D

; wPlayerGender
PLAYER_GENDER_MALE		EQU 0
PLAYER_GENDER_FEMALE		EQU 1

; Shiny DV constants
; these are read only
ATKDEFDV_SHINY			EQU $FB
SPDSPCDV_SHINY			EQU $DF
ATKDEFDV_SHINY_FEMALE		EQU $7B

; used when returning a Pokemon's gender
GENDERLESS			EQU $00
MALE				EQU $01
FEMALE				EQU $02

;GENDERLESS			EQU $00
MALE_ONLY			EQU $01
FEMALE_ONLY			EQU $02

; ratios
MALE_88_PERCENT			EQU $20
MALE_75_PERCENT			EQU $40
SAME_BOTH_GENDERS		EQU $80
FEMALE_75_PERCENT		EQU $C0
FEMALE_88_PERCENT		EQU $E0

